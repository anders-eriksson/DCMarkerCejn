<Window
    x:Class="DCMarker.ManualMainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:DCMarker"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:p="clr-namespace:DCMarker.Properties"
    Title="DCMarker"
    Width="525"
    Height="287.829"
    Closing="Window_Closing"
    Icon="dclasersystem.ico"
    Loaded="Window_Loaded"
    ResizeMode="CanMinimize"
    mc:Ignorable="d">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
        <local:CheckBoxConverter x:Key="CheckBoxConverter" />
        <DataTemplate DataType="{x:Type ValidationError}">
            <TextBlock
                Width="159"
                Height="18"
                Margin="0"
                HorizontalAlignment="Left"
                FontSize="10"
                FontStyle="Italic"
                Foreground="Red"
                Text="{Binding Path=ErrorContent}" />
        </DataTemplate>
    </Window.Resources>

    <Grid>
        <DockPanel Margin="0,0,0,221">
            <Menu DockPanel.Dock="Top" IsTabStop="False">
                <MenuItem Header="_File" IsTabStop="False">

                    <MenuItem
                        x:Name="Exit"
                        Click="Exit_Click"
                        Header="_Exit" />
                </MenuItem>
                <MenuItem Header="_Tools" IsTabStop="False">
                    <MenuItem
                        x:Name="ResetSignals"
                        Click="ResetSignals_Click"
                        Header="Reset IO" />
                </MenuItem>
                <MenuItem Header="_Window" IsTabStop="False">
                    <MenuItem
                        x:Name="OnTop"
                        Click="OnTop_Click"
                        Header="_OnTop"
                        IsCheckable="True" />
                </MenuItem>
                <MenuItem Header="_Help" IsTabStop="False">
                    <MenuItem
                        x:Name="About"
                        Click="About_Click"
                        Header="_About" />
                </MenuItem>
            </Menu>
        </DockPanel>
        <TextBlock
            x:Name="FixtureLabel"
            Margin="37,36,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            FontSize="20"
            IsEnabled="{Binding HasFixture}"
            Text="{x:Static p:Resources.Fixture}"
            TextWrapping="Wrap"
            Visibility="{Binding Path=HasFixture, Converter={StaticResource BoolToVis}}" />

        <TextBlock
            x:Name="FixtureTextBlock"
            Margin="139,36,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            FontSize="20"
            IsEnabled="{Binding HasFixture}"
            Text="{Binding Fixture}"
            TextWrapping="Wrap"
            Visibility="{Binding Path=HasFixture, Converter={StaticResource BoolToVis}}" />
        <TextBlock
            x:Name="ArticleTextblock"
            Margin="42,78,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Text="{x:Static p:Resources.ArticleNumber}"
            TextWrapping="Wrap" />
        <TextBox
            x:Name="ArticleTextBox"
            Width="132"
            Margin="139,76,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            local:FocusAdvancement.AdvancesByEnterKey="True"
            IsEnabled="{Binding OrderInProgress}"
            TabIndex="0"
            TextWrapping="Wrap">
            <TextBox.Text>
                <Binding
                    Mode="TwoWay"
                    NotifyOnValidationError="True"
                    Path="ArticleNumber"
                    UpdateSourceTrigger="LostFocus"
                    ValidatesOnDataErrors="True"
                    ValidatesOnNotifyDataErrors="True">
                    <Binding.ValidationRules>
                        <local:ArticleValidator ValidatesOnTargetUpdated="True" />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>

        <TextBlock
            x:Name="BatchSizeLabel"
            Margin="301,78,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Text="{x:Static p:Resources.BatchSize}" />
        <ContentPresenter
            Height="20"
            Margin="350,40,0,160"
            Content="{Binding ElementName=BatchSizeTextbox, Path=(Validation.Errors).CurrentItem}" />
        <TextBox
            x:Name="BatchSizeTextbox"
            Width="132"
            Margin="350,76,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            local:FocusAdvancement.AdvancesByEnterKey="True"
            IsEnabled="{Binding OrderInProgress}"
            TabIndex="1"
            TextWrapping="Wrap">
            <TextBox.Text>
                <Binding
                    Mode="TwoWay"
                    NotifyOnValidationError="True"
                    Path="BatchSize"
                    UpdateSourceTrigger="LostFocus"
                    ValidatesOnDataErrors="True"
                    ValidatesOnNotifyDataErrors="True">
                    <Binding.ValidationRules>
                        <local:QuantityValidator ValidatesOnTargetUpdated="True" />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>

        <TextBlock
            x:Name="KantLabel"
            Margin="301,104,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            IsEnabled="{Binding HasKant}"
            Text="{x:Static p:Resources.Kant}"
            TextWrapping="Wrap"
            Visibility="{Binding Path=HasKant, Converter={StaticResource BoolToVis}}" />
        <TextBlock
            x:Name="KantTextBlock"
            Width="143"
            Margin="350,104,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            IsEnabled="{Binding HasKant}"
            Text="{Binding Kant}"
            TextWrapping="Wrap"
            Visibility="{Binding Path=HasKant, Converter={StaticResource BoolToVis}}" />

        <TextBlock
            x:Name="BatchDoneLabel"
            Margin="301,127,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Text="{x:Static p:Resources.BatchDone}" />
        <TextBlock
            x:Name="BatchDone"
            Width="143"
            Margin="350,127,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Text="{Binding BatchesDone}" />
        <TextBlock
            x:Name="TOnrLabel"
            Margin="42,127,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            IsEnabled="{Binding HasTOnr}"
            Text="{x:Static p:Resources.ToNumber}"
            Visibility="{Binding Path=HasTOnr, Converter={StaticResource BoolToVis}}" />
        <TextBox
            x:Name="TOnrTextbox"
            Width="132"
            Margin="139,127,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            local:FocusAdvancement.AdvancesByEnterKey="True"
            IsEnabled="{Binding OrderInProgress}"
            TabIndex="3"
            Text="{Binding TOnr, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            TextWrapping="Wrap"
            Visibility="{Binding Path=HasTOnr, Converter={StaticResource BoolToVis}}" />
        <Button
            x:Name="OkButton"
            Width="75"
            Margin="143,172,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Command="{Binding OkButtonCommand, Mode=OneWay}"
            Content="{x:Static p:Resources.OK}"
            TabIndex="3" />

        <Button
            x:Name="LoadButton"
            Width="75"
            Margin="387,176,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Click="LoadButton_Click"
            Content="Load"
            IsTabStop="False" />
        <Button
            x:Name="ExecuteButton"
            Width="75"
            Margin="387,201,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Click="ExecuteButton_Click"
            Content="Execute"
            IsTabStop="False" />
        <Ellipse
            x:Name="InMarking"
            Width="20"
            Height="20"
            Margin="0,0,26,67"
            HorizontalAlignment="Right"
            VerticalAlignment="Bottom">
            <Ellipse.Fill>
                <SolidColorBrush Color="{Binding ColorStatus, UpdateSourceTrigger=PropertyChanged}" />
            </Ellipse.Fill>
        </Ellipse>
        <StackPanel VerticalAlignment="Bottom">
            <TextBlock
                x:Name="textBlock"
                Foreground="Red"
                Text="{Binding ErrorMessage}"
                TextWrapping="Wrap" />
            <StatusBar Margin="0,0,0,0" VerticalAlignment="Bottom">
                <StatusBarItem>
                    <TextBlock Text="{Binding Status}" />
                </StatusBarItem>
            </StatusBar>
        </StackPanel>
        <CheckBox
            Margin="139,104,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            local:FocusAdvancement.AdvancesByEnterKey="True"
            Content="{x:Static p:Resources.TestItem}"
            IsChecked="{Binding IsTestItemSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            IsEnabled="{Binding OrderInProgress}"
            TabIndex="2" />
    </Grid>
</Window>